package test;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;

import org.junit.Assert;
import org.junit.Test;
import org.mockito.Mockito;
import org.powermock.api.mockito.PowerMockito;

public class AmuraTest {

    @Test
    public void unitFunctionTesting() throws Exception{
        String inp = "2 -1 -3 4 -1 2 1 -5 -4";
        System.out.println("Checking for first input");
        AmuraAssignment.maxSubArraySum(inp.split("\\s"));
        inp = null;
        System.out.println("Checking for second input");
        AmuraAssignment.maxSubArraySum(null);
    }

    @Test
    public void completeFlow() throws Exception {
    	InputStreamReader inputStreamReader = Mockito.mock(InputStreamReader.class);
        BufferedReader bufferedReader = Mockito.mock(BufferedReader.class);
        String[] mainArg = new String[]{"Amura", "Assignment"};
        String inp = "2 -1 -3 4 -1 2 1 -5 -4";
        ByteArrayInputStream  byteArrayInputStream = new ByteArrayInputStream(inp.getBytes());
        System.setIn(byteArrayInputStream);
        PowerMockito.whenNew(BufferedReader.class).withArguments(inputStreamReader).thenReturn(bufferedReader);
        PowerMockito.when(bufferedReader.readLine()).thenReturn(inp);
        Assert.assertEquals(inp, bufferedReader.readLine());
        AmuraAssignment.main(mainArg);
    }
}
